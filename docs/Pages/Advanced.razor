@page "/advanced"
@inject ISidepanelService Sidepanel
<PageTitle>Sidepanel - Advanced</PageTitle>

<h1>Sidepanel Advanced</h1>

<h2>Parameters</h2>



<h2>Open Counter with parameter</h2>
<button @onclick="OpenCounterWithParameter">Open Counter</button>
<button @onclick="Close">Close</button>

<Codeblock Code="@codeblock1" />

<hr />

<h2>Open Counter with multiple typed parameters</h2>
<div class="form-group">
    <label for="@nameof(increaseBy)">Increase By</label>
    <input type="number" class="form-control" id="@nameof(increaseBy)" @bind="increaseBy">
</div>
<div class="form-group">
    <label for="@nameof(initialValue)">Initial Value</label>
    <input type="number" class="form-control" id="@nameof(initialValue)" @bind="initialValue">
</div>

<button @onclick="OpenCounterWithTypedParameters">Open Counter</button>
<button @onclick="Close">Close</button>

<Codeblock Code="@codeblock2" />



@code {
    private string codeblock1 => "Sidepanel.Open<Counter>(\"Counter\", \"example\", (nameof(increaseBy),increaseBy));";
    private string codeblock2 => @"Sidepanel.Open<Counter>(""Counter"", ""Example"", parameters => parameters
                            .Add(p => p.IncreaseBy, increaseBy)
                            .Add(p => p.InitialValue, initialValue)
                            .Add(p => p.OnCounterClicked,  () => Console.WriteLine(""Clicked""))
                            );";

    private int increaseBy = 10;
    private int initialValue = 100;
    private void OpenCounterWithParameter()
    {
        Sidepanel.Open<Counter>("Counter", "example", (nameof(increaseBy), increaseBy));
    }

    private void OpenCounterWithParameters()
    {
        var parameters = new Dictionary<string, object> {
            { (nameof(increaseBy)), increaseBy },
            { (nameof(initialValue)), initialValue}
        };
        Sidepanel.Open<Counter>("Counter", "Example", parameters);
    }

    private void OpenCounterWithTypedParameters()
    {
        Sidepanel.Open<Counter>("Counter", "Example", parameters => parameters
        .Add(p => p.IncreaseBy, increaseBy)
        .Add(p => p.InitialValue, initialValue)
        .Add(p => p.OnCounterClicked, () => Console.WriteLine("Clicked"))
        );
    }

    private void Close()
    {
        Sidepanel.Close();
    }
}

